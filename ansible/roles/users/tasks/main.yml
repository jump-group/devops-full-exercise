---
- name: Ensure requested groups are present
  group:
    name: "{{ item }}"
    state: present
  loop: "{{ users | sum(attribute='groups', start=[]) | list | unique }}"

- name: Ensure sudo group has sudo privileges
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^%sudo"
    line: "%sudo ALL=(ALL:ALL) ALL"
    validate: "/usr/sbin/visudo -cf %s"

- name: Setup users
  user:
    name: "{{ item.name }}"
    group: "{{ item.groups[0] }}"
    groups: "{{ item.groups | join(',') }}"
    password: '{% for user in vault_users | default([]) if user.name == item.name and user.password is defined %}{{ user.password | password_hash("sha512", (user.salt | default(""))[:16] | regex_replace("[^\.\/a-zA-Z0-9]", "x")) }}{% else %}{{ "!" }}{% endfor %}'
    state: present
    shell: /bin/bash
    update_password: "{{ item.update_password | default('always') }}"
  loop: "{{ users }}"
  loop_control:
    label: "{{ item.name }}"

- name: Add web user sudoers items for services
  template:
    src: sudoers.d.j2
    dest: "/etc/sudoers.d/{{ web_user }}-services"
    mode: '0440'
    owner: root
    group: root
    validate: "/usr/sbin/visudo -cf %s"
  when: web_sudoers[0] is defined

- name: Add user SSH keys
  authorized_key:
    user: "{{ item.0.name }}"
    key: "{{ item.1 }}"
  loop: "{{ users | default([]) | subelements('keys') }}"
  loop_control:
    label: "{{ item.0.name }}"
